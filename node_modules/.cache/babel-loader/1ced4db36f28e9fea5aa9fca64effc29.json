{"ast":null,"code":"import _classCallCheck from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/src/Clicker.js\";\n\nvar React = require(\"react\");\n\nvar Clicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Clicker, _React$Component);\n\n  function Clicker() {\n    var _this;\n\n    _classCallCheck(this, Clicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Clicker).call(this));\n\n    _this.handleClicker = function () {\n      _this.setState({\n        points: _this.state.points + _this.state.rate\n      });\n    };\n\n    _this.buyDomeGroup = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfDomeGroup * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfDomeGroup * 10),\n          populationGrowth: _this.state.populationGrowth + 3,\n          numberOfDomeGroup: _this.state.numberOfDomeGroup += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyDomeGroup = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfDomeGroup * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfDomeGroup * 10),\n          populationGrowth: _this.state.populationGrowth + 3,\n          numberOfDomeGroup: _this.state.numberOfDomeGroup += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buySmallDome = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfSmallDome * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfSmallDome * 10),\n          populationGrowth: _this.state.populationGrowth + 3,\n          numberOfSmallDome: _this.state.numberOfSmallDome += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyOrbitalStation = function () {\n      var cost = 100000;\n\n      if (_this.state.points >= cost + _this.state.numberOfOrbitalStation * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfOrbitalStation * 10),\n          rate: _this.state.rate + 3,\n          numberOfOrbitalStation: _this.state.numberOfOrbitalStation += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buySpacePort = function () {\n      var cost = 10000;\n\n      if (_this.state.points >= cost + _this.state.numberOfSpacePort * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfSpacePort * 10),\n          rate: _this.state.rate + 3,\n          numberOfSpacePort: _this.state.numberOfSpacePort += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyNanoFabricator = function () {\n      var cost = 800;\n\n      if (_this.state.points >= cost + _this.state.numberOfNanoFabricator * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfNanoFabricator * 10),\n          rate: _this.state.rate + 3,\n          numberOfNanoFabricator: _this.state.numberOfNanoFabricator += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyAgricultureDome = function () {\n      var cost = 200;\n\n      if (_this.state.points >= cost + _this.state.numberOfAgricultureDome * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfAgricultureDome * 10),\n          rate: _this.state.rate + 3,\n          numberOfAgricultureDome: _this.state.numberOfAgricultureDome += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyWaterPlant = function () {\n      var cost = 200;\n\n      if (_this.state.points >= cost + _this.state.numberOfWaterPlant * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfWaterPlant * 10),\n          rate: _this.state.rate + 3,\n          numberOfWaterPlant: _this.state.numberOfWaterPlant += 1,\n          population: _this.state.population += cost\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyGasProcessing = function () {\n      var cost = 200;\n\n      if (_this.state.points >= 100 + _this.state.numberOfGasProcessing * 10) {\n        _this.setState({\n          points: _this.state.points - (100 + _this.state.numberOfGasProcessing * 10),\n          rate: _this.state.rate + 3,\n          numberOfGasProcessing: _this.state.numberOfGasProcessing += 1\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyOreMine = function () {\n      var cost = 100;\n\n      if (_this.state.points >= 100 + _this.state.numberOfMines * 10) {\n        _this.setState({\n          points: _this.state.points - (100 + _this.state.numberOfMines * 10),\n          rate: _this.state.rate + 3,\n          numberOfMines: _this.state.numberOfMines += 1\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.autoAccumulate = function () {\n      setInterval(function () {\n        _this.setState({\n          rate: _this.state.rate,\n          points: _this.state.points + _this.state.rate,\n          populationGrowth: Math.floor(_this.state.population * 0.01),\n          population: _this.state.population + _this.state.populationGrowth\n        });\n      }, 1000);\n    };\n\n    _this.state = {\n      points: 70,\n      population: 100,\n      populationGrowth: 0,\n      rate: 1,\n      message: \"\",\n      numberOfMines: 0,\n      numberOfGasProcessing: 0,\n      numberOfAgricultureDome: 0,\n      numberOfWaterPlant: 0,\n      numberOfNanoFabricator: 0,\n      numberOfSpacePort: 0,\n      numberOfOrbitalStation: 0,\n      numberOfSmallDome: 0,\n      numberOfDomeGroup: 0,\n      numberOfLargeDome: 0\n    };\n    return _this;\n  }\n\n  _createClass(Clicker, [{\n    key: \"render\",\n    value: function render() {\n      var points = this.state.points;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"JRJ's Space CivilizationÂ®: Beyond Stars\"), React.createElement(\"div\", {\n        className: \"coreButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.autoAccumulate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"START\"), React.createElement(\"button\", {\n        onClick: this.handleClicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Click Here\")), React.createElement(\"div\", {\n        className: \"econBuildingsTabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.buyOreMine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Ore Mine $\", 100 + this.state.numberOfMines * 10), React.createElement(\"button\", {\n        onClick: this.buyGasProcessing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Gas Processing Facility $\", 300 + this.state.numberOfGasProcessing * 10), React.createElement(\"button\", {\n        onClick: this.buyAgricultureDome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Agriculture Dome $\", 500 + this.state.numberOfAgricultureDome * 10), React.createElement(\"button\", {\n        onClick: this.buyWaterPlant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Water Processing Plant $\", 700 + this.state.numberOfWaterPlant * 10), React.createElement(\"button\", {\n        onClick: this.buyNanoFabricator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Nano Fabricator $\", 10000 + this.state.numberOfNanoFabricator * 10), React.createElement(\"button\", {\n        onClick: this.buySpacePort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Space Port $\", 50000 + this.state.numberOfSpacePort * 10), React.createElement(\"button\", {\n        onClick: this.buyOrbitalStation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Orbital Station $\", 150000 + this.state.numberOfOrbitalStation * 10)), React.createElement(\"div\", {\n        className: \"habitatBuildingsTabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.buySmallDome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Small Dome\"), React.createElement(\"button\", {\n        onClick: this.buySmallDome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Dome Group\")), React.createElement(\"div\", {\n        className: \"coreStats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Galactic Credit Accumulated \\uD83D\\uDCB0: $\", points), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Credit Per Second \\uD83D\\uDCB5: \", this.state.rate), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Total Population \\uD83D\\uDC68\\u200D\\uD83D\\uDE80: \", this.state.population), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Population Growth Per Second \\uD83E\\uDD31: \", this.state.populationGrowth)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Ore Mines in Operation \\uD83D\\uDDFB: \", this.state.numberOfMines), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Gas Processing Facilities in Operation \\uD83C\\uDF0B:\", \" \", this.state.numberOfGasProcessing), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Agricultural Domes in Operation \\uD83E\\uDD6C:\", \" \", this.state.numberOfAgricultureDome), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Water Processing Plants in Operation \\uD83D\\uDCA7:\", \" \", this.state.numberOfWaterPlant), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Nano Fabricators in Operation \\u2699\\uFE0F: \", this.state.numberOfNanoFabricator), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Space Ports in Operation \\uD83D\\uDCE1: \", this.state.numberOfSpacePort), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Orbital Stations in Operation \\uD83D\\uDEF0: \", this.state.numberOfOrbitalStation), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Small Domes in Occupied \\uD83D\\uDDFB: \", this.state.numberOfSmallDome), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Dome Groups in Occupied \\uD83D\\uDCE1: \", this.state.numberOfDomeGroup));\n    }\n  }]);\n\n  return Clicker;\n}(React.Component);\n\nexport default Clicker;","map":{"version":3,"sources":["/Users/jungrae/Desktop/Assignments/react_events/react_assignment/src/Clicker.js"],"names":["React","require","Clicker","handleClicker","setState","points","state","rate","buyDomeGroup","cost","numberOfDomeGroup","populationGrowth","population","message","buySmallDome","numberOfSmallDome","buyOrbitalStation","numberOfOrbitalStation","buySpacePort","numberOfSpacePort","buyNanoFabricator","numberOfNanoFabricator","buyAgricultureDome","numberOfAgricultureDome","buyWaterPlant","numberOfWaterPlant","buyGasProcessing","numberOfGasProcessing","buyOreMine","numberOfMines","autoAccumulate","setInterval","Math","floor","numberOfLargeDome","Component"],"mappings":"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","sourcesContent":["const React = require(\"react\");\n\nclass Clicker extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      points: 70,\n      population: 100,\n      populationGrowth: 0,\n      rate: 1,\n      message: \"\",\n      numberOfMines: 0,\n      numberOfGasProcessing: 0,\n      numberOfAgricultureDome: 0,\n      numberOfWaterPlant: 0,\n      numberOfNanoFabricator: 0,\n      numberOfSpacePort: 0,\n      numberOfOrbitalStation: 0,\n      numberOfSmallDome: 0,\n      numberOfDomeGroup: 0,\n      numberOfLargeDome: 0\n    };\n  }\n\n  handleClicker = () => {\n    this.setState({\n      points: this.state.points + this.state.rate\n    });\n  };\n\n  buyDomeGroup = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfDomeGroup * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfDomeGroup * 10),\n        populationGrowth: this.state.populationGrowth + 3,\n        numberOfDomeGroup: (this.state.numberOfDomeGroup += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyDomeGroup = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfDomeGroup * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfDomeGroup * 10),\n        populationGrowth: this.state.populationGrowth + 3,\n        numberOfDomeGroup: (this.state.numberOfDomeGroup += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buySmallDome = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfSmallDome * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfSmallDome * 10),\n        populationGrowth: this.state.populationGrowth + 3,\n        numberOfSmallDome: (this.state.numberOfSmallDome += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyOrbitalStation = () => {\n    let cost = 100000;\n    if (this.state.points >= cost + this.state.numberOfOrbitalStation * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfOrbitalStation * 10),\n        rate: this.state.rate + 3,\n        numberOfOrbitalStation: (this.state.numberOfOrbitalStation += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buySpacePort = () => {\n    let cost = 10000;\n    if (this.state.points >= cost + this.state.numberOfSpacePort * 10) {\n      this.setState({\n        points: this.state.points - (cost + this.state.numberOfSpacePort * 10),\n        rate: this.state.rate + 3,\n        numberOfSpacePort: (this.state.numberOfSpacePort += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyNanoFabricator = () => {\n    let cost = 800;\n    if (this.state.points >= cost + this.state.numberOfNanoFabricator * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfNanoFabricator * 10),\n        rate: this.state.rate + 3,\n        numberOfNanoFabricator: (this.state.numberOfNanoFabricator += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyAgricultureDome = () => {\n    let cost = 200;\n    if (this.state.points >= cost + this.state.numberOfAgricultureDome * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfAgricultureDome * 10),\n        rate: this.state.rate + 3,\n        numberOfAgricultureDome: (this.state.numberOfAgricultureDome += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyWaterPlant = () => {\n    let cost = 200;\n    if (this.state.points >= cost + this.state.numberOfWaterPlant * 10) {\n      this.setState({\n        points: this.state.points - (cost + this.state.numberOfWaterPlant * 10),\n        rate: this.state.rate + 3,\n        numberOfWaterPlant: (this.state.numberOfWaterPlant += 1),\n        population: (this.state.population += cost)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyGasProcessing = () => {\n    let cost = 200;\n    if (this.state.points >= 100 + this.state.numberOfGasProcessing * 10) {\n      this.setState({\n        points:\n          this.state.points - (100 + this.state.numberOfGasProcessing * 10),\n        rate: this.state.rate + 3,\n        numberOfGasProcessing: (this.state.numberOfGasProcessing += 1)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyOreMine = () => {\n    let cost = 100;\n    if (this.state.points >= 100 + this.state.numberOfMines * 10) {\n      this.setState({\n        points: this.state.points - (100 + this.state.numberOfMines * 10),\n        rate: this.state.rate + 3,\n        numberOfMines: (this.state.numberOfMines += 1)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  autoAccumulate = () => {\n    setInterval(() => {\n      this.setState({\n        rate: this.state.rate,\n        points: this.state.points + this.state.rate,\n        populationGrowth: Math.floor(this.state.population * 0.01),\n        population: this.state.population + this.state.populationGrowth\n      });\n    }, 1000);\n  };\n\n  render() {\n    const { points } = this.state;\n    return (\n      <div>\n        <h1>{\"JRJ's Space CivilizationÂ®: Beyond Stars\"}</h1>\n        <div className=\"coreButtons\">\n          <button onClick={this.autoAccumulate}>START</button>\n          <button onClick={this.handleClicker}>Click Here</button>\n        </div>\n        <div className=\"econBuildingsTabs\">\n          <button onClick={this.buyOreMine}>Ore Mine ${(100 + this.state.numberOfMines * 10)}</button>\n          <button onClick={this.buyGasProcessing}>\n            Gas Processing Facility ${(300 + this.state.numberOfGasProcessing * 10)}\n          </button>\n          <button onClick={this.buyAgricultureDome}>\n            Agriculture Dome ${(500 + this.state.numberOfAgricultureDome * 10)}\n          </button>\n          <button onClick={this.buyWaterPlant}>Water Processing Plant ${(700 + this.state.numberOfWaterPlant * 10)}</button>\n          <button onClick={this.buyNanoFabricator}>Nano Fabricator ${(10000 + this.state.numberOfNanoFabricator * 10)}</button>\n          <button onClick={this.buySpacePort}>Space Port ${(50000 + this.state.numberOfSpacePort * 10)}</button>\n          <button onClick={this.buyOrbitalStation}>Orbital Station ${(150000 + this.state.numberOfOrbitalStation * 10)}</button>\n        </div>\n        <div className=\"habitatBuildingsTabs\">\n        <button onClick={this.buySmallDome}>Small Dome</button>\n        <button onClick={this.buySmallDome}>Dome Group</button>\n\n\n        </div>\n        <div className=\"coreStats\">\n          <p>Galactic Credit Accumulated ð°: ${points}</p>\n          <p>Credit Per Second ðµ: {this.state.rate}</p>\n          <p>Total Population ð¨âð: {this.state.population}</p>\n          <p>Population Growth Per Second ð¤±: {this.state.populationGrowth}</p>\n        </div>\n        <p>{this.state.message}</p>\n        <p>Ore Mines in Operation ð»: {this.state.numberOfMines}</p>\n        <p>\n          Gas Processing Facilities in Operation ð:{\" \"}\n          {this.state.numberOfGasProcessing}\n        </p>\n        <p>\n          Agricultural Domes in Operation ð¥¬:{\" \"}\n          {this.state.numberOfAgricultureDome}\n        </p>\n        <p>\n          Water Processing Plants in Operation ð§:{\" \"}\n          {this.state.numberOfWaterPlant}\n        </p>\n        <p>\n          Nano Fabricators in Operation âï¸: {this.state.numberOfNanoFabricator}\n        </p>\n        <p>Space Ports in Operation ð¡: {this.state.numberOfSpacePort}</p>\n        <p>\n          Orbital Stations in Operation ð°: {this.state.numberOfOrbitalStation}\n        </p>\n        <p>Small Domes in Occupied ð»: {this.state.numberOfSmallDome}</p>\n        <p>Dome Groups in Occupied ð¡: {this.state.numberOfDomeGroup}</p>\n\n      </div>\n    );\n  }\n}\n\nexport default Clicker;\n"]},"metadata":{},"sourceType":"module"}