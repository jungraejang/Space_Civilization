{"ast":null,"code":"import _classCallCheck from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/src/Clicker.js\";\n\nvar React = require(\"react\");\n\nvar Clicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Clicker, _React$Component);\n\n  function Clicker() {\n    var _this;\n\n    _classCallCheck(this, Clicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Clicker).call(this));\n\n    _this.handleClicker = function () {\n      _this.setState({\n        points: _this.state.points + _this.state.rate\n      });\n    };\n\n    _this.buyColonialForce = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfCorpSecForce * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfCorpSecForce * 10),\n          militaryIndex: _this.state.militaryIndex + 1,\n          numberOfCorpSecForce: _this.state.numberOfCorpSecForce += 1,\n          population: _this.state.population -= 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyCorpSecForce = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfCorpSecForce * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfCorpSecForce * 10),\n          militaryIndex: _this.state.militaryIndex + 1,\n          numberOfCorpSecForce: _this.state.numberOfCorpSecForce += 1,\n          population: _this.state.population -= 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyMilitia = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfMilitia * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfMilitia * 10),\n          militaryIndex: _this.state.militaryIndex + 1,\n          numberOfMilitia: _this.state.numberOfMilitia += 1,\n          population: _this.state.population -= 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyOrbitalStructure = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfOrbitalStructure * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfOrbitalStructure * 10),\n          populationGrowth: _this.state.populationGrowth + 3,\n          numberOfOrbitalStructure: _this.state.numberOfOrbitalStructure += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyColonialCapital = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfColonialCapital * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfColonialCapital * 10),\n          populationGrowth: _this.state.populationGrowth + 3,\n          numberOfColonialCapital: _this.state.numberOfColonialCapital += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyUndergroundNetwork = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfUndergroundNetwork * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfUndergroundNetwork * 10),\n          populationGrowth: _this.state.populationGrowth + 3,\n          numberOfUndergroundNetwork: _this.state.numberOfUndergroundNetwork += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyUndergroundCity = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfUndergroundCity * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfUndergroundCity * 10),\n          populationGrowth: _this.state.populationGrowth + 3,\n          numberOfUndergroundCity: _this.state.numberOfUndergroundCity += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyLargeDome = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfLargeDome * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfLargeDome * 10),\n          populationGrowth: _this.state.populationGrowth + 3,\n          numberOfLargeDome: _this.state.numberOfLargeDome += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyDomeGroup = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfDomeGroup * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfDomeGroup * 10),\n          populationGrowth: _this.state.populationGrowth + 3,\n          numberOfDomeGroup: _this.state.numberOfDomeGroup += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buySmallDome = function () {\n      var cost = 100;\n\n      if (_this.state.points >= cost + _this.state.numberOfSmallDome * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfSmallDome * 10),\n          populationGrowth: _this.state.populationGrowth + 3,\n          numberOfSmallDome: _this.state.numberOfSmallDome += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyOrbitalStation = function () {\n      var cost = 100000;\n\n      if (_this.state.points >= cost + _this.state.numberOfOrbitalStation * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfOrbitalStation * 10),\n          rate: _this.state.rate + 3,\n          numberOfOrbitalStation: _this.state.numberOfOrbitalStation += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buySpacePort = function () {\n      var cost = 10000;\n\n      if (_this.state.points >= cost + _this.state.numberOfSpacePort * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfSpacePort * 10),\n          rate: _this.state.rate + 3,\n          numberOfSpacePort: _this.state.numberOfSpacePort += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyNanoFabricator = function () {\n      var cost = 800;\n\n      if (_this.state.points >= cost + _this.state.numberOfNanoFabricator * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfNanoFabricator * 10),\n          rate: _this.state.rate + 3,\n          numberOfNanoFabricator: _this.state.numberOfNanoFabricator += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyAgricultureDome = function () {\n      var cost = 200;\n\n      if (_this.state.points >= cost + _this.state.numberOfAgricultureDome * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfAgricultureDome * 10),\n          rate: _this.state.rate + 3,\n          numberOfAgricultureDome: _this.state.numberOfAgricultureDome += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyWaterPlant = function () {\n      var cost = 200;\n\n      if (_this.state.points >= cost + _this.state.numberOfWaterPlant * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfWaterPlant * 10),\n          rate: _this.state.rate + 3,\n          numberOfWaterPlant: _this.state.numberOfWaterPlant += 1,\n          population: _this.state.population += cost\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyGasProcessing = function () {\n      var cost = 200;\n\n      if (_this.state.points >= 100 + _this.state.numberOfGasProcessing * 10) {\n        _this.setState({\n          points: _this.state.points - (100 + _this.state.numberOfGasProcessing * 10),\n          rate: _this.state.rate + 3,\n          numberOfGasProcessing: _this.state.numberOfGasProcessing += 1\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyOreMine = function () {\n      var cost = 100;\n\n      if (_this.state.points >= 100 + _this.state.numberOfMines * 10) {\n        _this.setState({\n          points: _this.state.points - (100 + _this.state.numberOfMines * 10),\n          rate: _this.state.rate + 3,\n          numberOfMines: _this.state.numberOfMines += 1\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.autoAccumulate = function () {\n      setInterval(function () {\n        _this.setState({\n          rate: _this.state.rate,\n          points: _this.state.points + _this.state.rate,\n          populationGrowth: Math.floor(_this.state.population * 0.01),\n          population: _this.state.population + _this.state.populationGrowth\n        });\n      }, 1000);\n    };\n\n    _this.state = {\n      points: 70,\n      population: 100,\n      populationGrowth: 0,\n      rate: 1,\n      message: \"\",\n      militaryIndex: 0,\n      numberOfMines: 0,\n      numberOfGasProcessing: 0,\n      numberOfAgricultureDome: 0,\n      numberOfWaterPlant: 0,\n      numberOfNanoFabricator: 0,\n      numberOfSpacePort: 0,\n      numberOfOrbitalStation: 0,\n      numberOfSmallDome: 0,\n      numberOfDomeGroup: 0,\n      numberOfLargeDome: 0,\n      numberOfUndergroundCity: 0,\n      numberOfUndergroundNetwork: 0,\n      numberOfColonialCapital: 0,\n      numberOfOrbitalStructure: 0,\n      numberOfMilitia: 0,\n      numberOfCorpSecForce: 0,\n      numberOfColonialForce: 0,\n      numberOfFedPlanetFleet: 0,\n      numberOfFedOrbitFleet: 0,\n      numberOfFedInterFleet: 0,\n      numberOfHMSJRJ: 0\n    };\n    return _this;\n  }\n\n  _createClass(Clicker, [{\n    key: \"render\",\n    value: function render() {\n      var points = this.state.points;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"JRJ's Space Civilization®: Beyond Stars\"), React.createElement(\"div\", {\n        className: \"coreButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.autoAccumulate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"START\"), React.createElement(\"button\", {\n        onClick: this.handleClicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Click Here\")), React.createElement(\"div\", {\n        className: \"econBuildingsTabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.buyOreMine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Ore Mine $\", 100 + this.state.numberOfMines * 10), React.createElement(\"button\", {\n        onClick: this.buyGasProcessing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"Gas Processing Facility $\", 300 + this.state.numberOfGasProcessing * 10), React.createElement(\"button\", {\n        onClick: this.buyAgricultureDome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Agriculture Dome $\", 500 + this.state.numberOfAgricultureDome * 10), React.createElement(\"button\", {\n        onClick: this.buyWaterPlant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"Water Processing Plant $\", 700 + this.state.numberOfWaterPlant * 10), React.createElement(\"button\", {\n        onClick: this.buyNanoFabricator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"Nano Fabricator $\", 10000 + this.state.numberOfNanoFabricator * 10), React.createElement(\"button\", {\n        onClick: this.buySpacePort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Space Port $\", 50000 + this.state.numberOfSpacePort * 10), React.createElement(\"button\", {\n        onClick: this.buyOrbitalStation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Orbital Station $\", 150000 + this.state.numberOfOrbitalStation * 10)), React.createElement(\"div\", {\n        className: \"habitatBuildingsTabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.buySmallDome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \"Small Dome\"), React.createElement(\"button\", {\n        onClick: this.buySmallDome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"Dome Group\"), React.createElement(\"button\", {\n        onClick: this.buyLargeDome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"Large Dome\"), React.createElement(\"button\", {\n        onClick: this.buyUndergroundCity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"Underground City\"), React.createElement(\"button\", {\n        onClick: this.buyUndergroundNetwork,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"Underground Network\"), React.createElement(\"button\", {\n        onClick: this.buyColonialCapital,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"Colonial Capital\"), React.createElement(\"button\", {\n        onClick: this.buyOrbitalStructure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"Orbital Structure\")), React.createElement(\"div\", {\n        className: \"coreStats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"Galactic Credit Accumulated \\uD83D\\uDCB0: $\", points), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"Credit Per Second \\uD83D\\uDCB5: \", this.state.rate), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, \"Total Population \\uD83D\\uDC68\\u200D\\uD83D\\uDE80: \", this.state.population), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"Population Growth Per Second \\uD83E\\uDD31: \", this.state.populationGrowth), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"Defense Strength \\u2694\\uFE0F: \", this.state.militaryIndex)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"div\", {\n        className: \"buildingStats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"econBuildingsStats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"Ore Mines in Operation \\uD83D\\uDDFB: \", this.state.numberOfMines), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \"Gas Processing Facilities in Operation \\uD83C\\uDF0B:\", \" \", this.state.numberOfGasProcessing), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"Agricultural Domes in Operation \\uD83E\\uDD6C:\", \" \", this.state.numberOfAgricultureDome), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, \"Water Processing Plants in Operation \\uD83D\\uDCA7:\", \" \", this.state.numberOfWaterPlant), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"Nano Fabricators in Operation \\u2699\\uFE0F:\", \" \", this.state.numberOfNanoFabricator), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \"Space Ports in Operation \\u2693\\uFE0F : \", this.state.numberOfSpacePort), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, \"Orbital Stations in Operation \\uD83D\\uDEF0:\", \" \", this.state.numberOfOrbitalStation)), React.createElement(\"div\", {\n        className: \"habitatBuildingsStats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \"Small Domes Occupied \\uD83C\\uDFE0: \", this.state.numberOfSmallDome), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, \"Dome Groups Occupied \\uD83C\\uDFE1: \", this.state.numberOfDomeGroup), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"Large Domes Occupied \\uD83C\\uDFD8: \", this.state.numberOfLargeDome), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, \"Underground Cities Occupied \\uD83C\\uDFDE : \", this.state.numberOfUndergroundCity), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \"Underground Networks Occupied \\uD83D\\uDE87: \", this.state.numberOfUndergroundNetwork), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"Colonial Capitals Built \\uD83C\\uDF06: \", this.state.numberOfColonialCapital), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"Orbital Structures Orbiting \\uD83C\\uDF0C: \", this.state.numberOfOrbitalStructure))));\n    }\n  }]);\n\n  return Clicker;\n}(React.Component);\n\nexport default Clicker;","map":{"version":3,"sources":["/Users/jungrae/Desktop/Assignments/react_events/react_assignment/src/Clicker.js"],"names":["React","require","Clicker","handleClicker","setState","points","state","rate","buyColonialForce","cost","numberOfCorpSecForce","militaryIndex","population","message","buyCorpSecForce","buyMilitia","numberOfMilitia","buyOrbitalStructure","numberOfOrbitalStructure","populationGrowth","buyColonialCapital","numberOfColonialCapital","buyUndergroundNetwork","numberOfUndergroundNetwork","buyUndergroundCity","numberOfUndergroundCity","buyLargeDome","numberOfLargeDome","buyDomeGroup","numberOfDomeGroup","buySmallDome","numberOfSmallDome","buyOrbitalStation","numberOfOrbitalStation","buySpacePort","numberOfSpacePort","buyNanoFabricator","numberOfNanoFabricator","buyAgricultureDome","numberOfAgricultureDome","buyWaterPlant","numberOfWaterPlant","buyGasProcessing","numberOfGasProcessing","buyOreMine","numberOfMines","autoAccumulate","setInterval","Math","floor","numberOfColonialForce","numberOfFedPlanetFleet","numberOfFedOrbitFleet","numberOfFedInterFleet","numberOfHMSJRJ","Component"],"mappings":"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","sourcesContent":["const React = require(\"react\");\n\nclass Clicker extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      points: 70,\n      population: 100,\n      populationGrowth: 0,\n      rate: 1,\n      message: \"\",\n      militaryIndex: 0,\n      numberOfMines: 0,\n      numberOfGasProcessing: 0,\n      numberOfAgricultureDome: 0,\n      numberOfWaterPlant: 0,\n      numberOfNanoFabricator: 0,\n      numberOfSpacePort: 0,\n      numberOfOrbitalStation: 0,\n      numberOfSmallDome: 0,\n      numberOfDomeGroup: 0,\n      numberOfLargeDome: 0,\n      numberOfUndergroundCity: 0,\n      numberOfUndergroundNetwork: 0,\n      numberOfColonialCapital: 0,\n      numberOfOrbitalStructure: 0,\n      numberOfMilitia: 0,\n      numberOfCorpSecForce: 0,\n      numberOfColonialForce: 0,\n      numberOfFedPlanetFleet: 0,\n      numberOfFedOrbitFleet: 0,\n      numberOfFedInterFleet: 0,\n      numberOfHMSJRJ: 0\n    };\n  }\n\n  handleClicker = () => {\n    this.setState({\n      points: this.state.points + this.state.rate\n    });\n  };\n\n  buyColonialForce = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfCorpSecForce * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfCorpSecForce * 10),\n        militaryIndex: this.state.militaryIndex + 1,\n        numberOfCorpSecForce: (this.state.numberOfCorpSecForce += 1),\n        population: (this.state.population -= 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyCorpSecForce = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfCorpSecForce * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfCorpSecForce * 10),\n        militaryIndex: this.state.militaryIndex + 1,\n        numberOfCorpSecForce: (this.state.numberOfCorpSecForce += 1),\n        population: (this.state.population -= 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyMilitia = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfMilitia * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfMilitia * 10),\n        militaryIndex: this.state.militaryIndex + 1,\n        numberOfMilitia: (this.state.numberOfMilitia += 1),\n        population: (this.state.population -= 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyOrbitalStructure = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfOrbitalStructure * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfOrbitalStructure * 10),\n        populationGrowth: this.state.populationGrowth + 3,\n        numberOfOrbitalStructure: (this.state.numberOfOrbitalStructure += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyColonialCapital = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfColonialCapital * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfColonialCapital * 10),\n        populationGrowth: this.state.populationGrowth + 3,\n        numberOfColonialCapital: (this.state.numberOfColonialCapital += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyUndergroundNetwork = () => {\n    let cost = 100;\n    if (\n      this.state.points >=\n      cost + this.state.numberOfUndergroundNetwork * 10\n    ) {\n      this.setState({\n        points:\n          this.state.points -\n          (cost + this.state.numberOfUndergroundNetwork * 10),\n        populationGrowth: this.state.populationGrowth + 3,\n        numberOfUndergroundNetwork: (this.state.numberOfUndergroundNetwork += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyUndergroundCity = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfUndergroundCity * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfUndergroundCity * 10),\n        populationGrowth: this.state.populationGrowth + 3,\n        numberOfUndergroundCity: (this.state.numberOfUndergroundCity += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyLargeDome = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfLargeDome * 10) {\n      this.setState({\n        points: this.state.points - (cost + this.state.numberOfLargeDome * 10),\n        populationGrowth: this.state.populationGrowth + 3,\n        numberOfLargeDome: (this.state.numberOfLargeDome += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyDomeGroup = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfDomeGroup * 10) {\n      this.setState({\n        points: this.state.points - (cost + this.state.numberOfDomeGroup * 10),\n        populationGrowth: this.state.populationGrowth + 3,\n        numberOfDomeGroup: (this.state.numberOfDomeGroup += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buySmallDome = () => {\n    let cost = 100;\n    if (this.state.points >= cost + this.state.numberOfSmallDome * 10) {\n      this.setState({\n        points: this.state.points - (cost + this.state.numberOfSmallDome * 10),\n        populationGrowth: this.state.populationGrowth + 3,\n        numberOfSmallDome: (this.state.numberOfSmallDome += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyOrbitalStation = () => {\n    let cost = 100000;\n    if (this.state.points >= cost + this.state.numberOfOrbitalStation * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfOrbitalStation * 10),\n        rate: this.state.rate + 3,\n        numberOfOrbitalStation: (this.state.numberOfOrbitalStation += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buySpacePort = () => {\n    let cost = 10000;\n    if (this.state.points >= cost + this.state.numberOfSpacePort * 10) {\n      this.setState({\n        points: this.state.points - (cost + this.state.numberOfSpacePort * 10),\n        rate: this.state.rate + 3,\n        numberOfSpacePort: (this.state.numberOfSpacePort += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyNanoFabricator = () => {\n    let cost = 800;\n    if (this.state.points >= cost + this.state.numberOfNanoFabricator * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfNanoFabricator * 10),\n        rate: this.state.rate + 3,\n        numberOfNanoFabricator: (this.state.numberOfNanoFabricator += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyAgricultureDome = () => {\n    let cost = 200;\n    if (this.state.points >= cost + this.state.numberOfAgricultureDome * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfAgricultureDome * 10),\n        rate: this.state.rate + 3,\n        numberOfAgricultureDome: (this.state.numberOfAgricultureDome += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyWaterPlant = () => {\n    let cost = 200;\n    if (this.state.points >= cost + this.state.numberOfWaterPlant * 10) {\n      this.setState({\n        points: this.state.points - (cost + this.state.numberOfWaterPlant * 10),\n        rate: this.state.rate + 3,\n        numberOfWaterPlant: (this.state.numberOfWaterPlant += 1),\n        population: (this.state.population += cost)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyGasProcessing = () => {\n    let cost = 200;\n    if (this.state.points >= 100 + this.state.numberOfGasProcessing * 10) {\n      this.setState({\n        points:\n          this.state.points - (100 + this.state.numberOfGasProcessing * 10),\n        rate: this.state.rate + 3,\n        numberOfGasProcessing: (this.state.numberOfGasProcessing += 1)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyOreMine = () => {\n    let cost = 100;\n    if (this.state.points >= 100 + this.state.numberOfMines * 10) {\n      this.setState({\n        points: this.state.points - (100 + this.state.numberOfMines * 10),\n        rate: this.state.rate + 3,\n        numberOfMines: (this.state.numberOfMines += 1)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  autoAccumulate = () => {\n    setInterval(() => {\n      this.setState({\n        rate: this.state.rate,\n        points: this.state.points + this.state.rate,\n        populationGrowth: Math.floor(this.state.population * 0.01),\n        population: this.state.population + this.state.populationGrowth\n      });\n    }, 1000);\n  };\n\n  render() {\n    const { points } = this.state;\n    return (\n      <div>\n        <h1>{\"JRJ's Space Civilization®: Beyond Stars\"}</h1>\n        <div className=\"coreButtons\">\n          <button onClick={this.autoAccumulate}>START</button>\n          <button onClick={this.handleClicker}>Click Here</button>\n        </div>\n        <div className=\"econBuildingsTabs\">\n          <button onClick={this.buyOreMine}>\n            Ore Mine ${100 + this.state.numberOfMines * 10}\n          </button>\n          <button onClick={this.buyGasProcessing}>\n            Gas Processing Facility $\n            {300 + this.state.numberOfGasProcessing * 10}\n          </button>\n          <button onClick={this.buyAgricultureDome}>\n            Agriculture Dome ${500 + this.state.numberOfAgricultureDome * 10}\n          </button>\n          <button onClick={this.buyWaterPlant}>\n            Water Processing Plant ${700 + this.state.numberOfWaterPlant * 10}\n          </button>\n          <button onClick={this.buyNanoFabricator}>\n            Nano Fabricator ${10000 + this.state.numberOfNanoFabricator * 10}\n          </button>\n          <button onClick={this.buySpacePort}>\n            Space Port ${50000 + this.state.numberOfSpacePort * 10}\n          </button>\n          <button onClick={this.buyOrbitalStation}>\n            Orbital Station ${150000 + this.state.numberOfOrbitalStation * 10}\n          </button>\n        </div>\n        <div className=\"habitatBuildingsTabs\">\n          <button onClick={this.buySmallDome}>Small Dome</button>\n          <button onClick={this.buySmallDome}>Dome Group</button>\n          <button onClick={this.buyLargeDome}>Large Dome</button>\n          <button onClick={this.buyUndergroundCity}>Underground City</button>\n          <button onClick={this.buyUndergroundNetwork}>Underground Network</button>\n          <button onClick={this.buyColonialCapital}>Colonial Capital</button>\n          <button onClick={this.buyOrbitalStructure}>Orbital Structure</button>\n        </div>\n        <div className=\"coreStats\">\n          <p>Galactic Credit Accumulated 💰: ${points}</p>\n          <p>Credit Per Second 💵: {this.state.rate}</p>\n          <p>Total Population 👨‍🚀: {this.state.population}</p>\n          <p>Population Growth Per Second 🤱: {this.state.populationGrowth}</p>\n          <p>Defense Strength ⚔️: {this.state.militaryIndex}</p>\n        </div>\n        <p>{this.state.message}</p>\n        <div className=\"buildingStats\">\n          <div className=\"econBuildingsStats\">\n            <p>Ore Mines in Operation 🗻: {this.state.numberOfMines}</p>\n            <p>\n              Gas Processing Facilities in Operation 🌋:{\" \"}\n              {this.state.numberOfGasProcessing}\n            </p>\n            <p>\n              Agricultural Domes in Operation 🥬:{\" \"}\n              {this.state.numberOfAgricultureDome}\n            </p>\n            <p>\n              Water Processing Plants in Operation 💧:{\" \"}\n              {this.state.numberOfWaterPlant}\n            </p>\n            <p>\n              Nano Fabricators in Operation ⚙️:{\" \"}\n              {this.state.numberOfNanoFabricator}\n            </p>\n            <p>Space Ports in Operation ⚓️ : {this.state.numberOfSpacePort}</p>\n            <p>\n              Orbital Stations in Operation 🛰:{\" \"}\n              {this.state.numberOfOrbitalStation}\n            </p>\n          </div>\n          <div className=\"habitatBuildingsStats\">\n            <p>Small Domes Occupied 🏠: {this.state.numberOfSmallDome}</p>\n            <p>Dome Groups Occupied 🏡: {this.state.numberOfDomeGroup}</p>\n            <p>Large Domes Occupied 🏘: {this.state.numberOfLargeDome}</p>\n            <p>Underground Cities Occupied 🏞 : {this.state.numberOfUndergroundCity}</p>\n            <p>Underground Networks Occupied 🚇: {this.state.numberOfUndergroundNetwork}</p>\n            <p>Colonial Capitals Built 🌆: {this.state.numberOfColonialCapital}</p>\n            <p>Orbital Structures Orbiting 🌌: {this.state.numberOfOrbitalStructure}</p>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Clicker;\n"]},"metadata":{},"sourceType":"module"}