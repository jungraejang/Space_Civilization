{"ast":null,"code":"import _classCallCheck from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/src/Clicker.js\";\n\nvar React = require(\"react\");\n\nvar Clicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Clicker, _React$Component);\n\n  function Clicker() {\n    var _this;\n\n    _classCallCheck(this, Clicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Clicker).call(this));\n\n    _this.handleClicker = function () {\n      _this.setState({\n        points: _this.state.points + _this.state.rate\n      });\n    };\n\n    _this.buyAgricultureDome = function () {\n      if (_this.state.points >= 100 + _this.state.numberOfAgricultureDome * 10) {\n        _this.setState({\n          points: _this.state.points - (100 + _this.state.numberOfAgricultureDome * 10),\n          rate: _this.state.rate + 3,\n          numberOfMines: _this.state.numberOfAgricultureDome += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit\"\n        });\n      }\n    };\n\n    _this.buyGasProcessing = function () {\n      if (_this.state.points >= 100 + _this.state.numberOfGasProcessing * 10) {\n        _this.setState({\n          points: _this.state.points - (100 + _this.state.numberOfGasProcessing * 10),\n          rate: _this.state.rate + 3,\n          numberOfMines: _this.state.numberOfGasProcessing += 1\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit\"\n        });\n      }\n    };\n\n    _this.buyOreMine = function () {\n      if (_this.state.points >= 100 + _this.state.numberOfMines * 10) {\n        _this.setState({\n          points: _this.state.points - (100 + _this.state.numberOfMines * 10),\n          rate: _this.state.rate + 3,\n          numberOfMines: _this.state.numberOfMines += 1\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit\"\n        });\n      }\n    };\n\n    _this.autoAccumulate = function () {\n      setInterval(function () {\n        _this.setState({\n          rate: _this.state.rate,\n          points: _this.state.points + _this.state.rate\n        });\n      }, 10000);\n    };\n\n    _this.populationIncrease = function () {\n      setInterval(function () {\n        _this.setState({\n          populationGrowth: _this.state.population * 0.01\n        });\n      }, 10000);\n    };\n\n    _this.state = {\n      points: 70,\n      population: 100,\n      populationGrowth: 0,\n      rate: 1,\n      message: \"\",\n      numberOfMines: 0,\n      numberOfGasProcessing: 0,\n      numberOfAgricultureDome: 0\n    };\n    return _this;\n  }\n\n  _createClass(Clicker, [{\n    key: \"render\",\n    value: function render() {\n      var points = this.state.points;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.autoAccumulate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"START\"), React.createElement(\"button\", {\n        onClick: this.handleClicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Click Here\"), React.createElement(\"button\", {\n        onClick: this.buyOreMine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"'Buy an Ore Mine($100)'\"), React.createElement(\"button\", {\n        onClick: this.buyGasProcessing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"'Buy a Gas Processing Facility($100)'\"), React.createElement(\"button\", {\n        onClick: this.buyAgricultureDome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"'Buy an Agriculture Dome($100)'\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Credit Per Second: \", this.state.rate), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Ore Mines in Operation: \", this.state.numberOfMines), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Gas Processing Facilities in Operation:\", \" \", this.state.numberOfGasProcessing), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Agricultural Domes in Operation: \", this.state.numberOfAgricultureDome), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Galactic Credit Accumulated: $\", points), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Total Population: \", this.state.population));\n    }\n  }]);\n\n  return Clicker;\n}(React.Component);\n\nexport default Clicker;","map":{"version":3,"sources":["/Users/jungrae/Desktop/Assignments/react_events/react_assignment/src/Clicker.js"],"names":["React","require","Clicker","handleClicker","setState","points","state","rate","buyAgricultureDome","numberOfAgricultureDome","numberOfMines","population","message","buyGasProcessing","numberOfGasProcessing","buyOreMine","autoAccumulate","setInterval","populationIncrease","populationGrowth","Component"],"mappings":"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","sourcesContent":["const React = require(\"react\");\n\nclass Clicker extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      points: 70,\n      population: 100,\n      populationGrowth: 0,\n      rate: 1,\n      message: \"\",\n      numberOfMines: 0,\n      numberOfGasProcessing: 0,\n      numberOfAgricultureDome: 0\n    };\n  }\n\n  handleClicker = () => {\n    this.setState({\n      points: this.state.points + this.state.rate\n    });\n  };\n\n  buyAgricultureDome = () => {\n    if (this.state.points >= 100 + this.state.numberOfAgricultureDome * 10) {\n      this.setState({\n        points:\n          this.state.points - (100 + this.state.numberOfAgricultureDome * 10),\n        rate: this.state.rate + 3,\n        numberOfMines: (this.state.numberOfAgricultureDome += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit\"\n      });\n    }\n  };\n\n  buyGasProcessing = () => {\n    if (this.state.points >= 100 + this.state.numberOfGasProcessing * 10) {\n      this.setState({\n        points:\n          this.state.points - (100 + this.state.numberOfGasProcessing * 10),\n        rate: this.state.rate + 3,\n        numberOfMines: (this.state.numberOfGasProcessing += 1)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit\"\n      });\n    }\n  };\n\n  buyOreMine = () => {\n    if (this.state.points >= 100 + this.state.numberOfMines * 10) {\n      this.setState({\n        points: this.state.points - (100 + this.state.numberOfMines * 10),\n        rate: this.state.rate + 3,\n        numberOfMines: (this.state.numberOfMines += 1)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit\"\n      });\n    }\n  };\n\n  // setInitRate = () => {\n  //   this.setState({\n  //     rate: 1\n  //   });\n  // };\n\n  autoAccumulate = () => {\n    setInterval(() => {\n      this.setState({\n        rate: this.state.rate,\n        points: this.state.points + this.state.rate\n      });\n    }, 10000);\n  };\n\n  populationIncrease = () => {\n    setInterval(() => {\n      this.setState({\n        populationGrowth: this.state.population * 0.01\n      });\n    }, 10000);\n  };\n\n  render() {\n    const { points } = this.state;\n    return (\n      <div>\n        <button onClick={this.autoAccumulate}>START</button>\n        <button onClick={this.handleClicker}>Click Here</button>\n        <button onClick={this.buyOreMine}>'Buy an Ore Mine($100)'</button>\n        <button onClick={this.buyGasProcessing}>\n          'Buy a Gas Processing Facility($100)'\n        </button>\n        <button onClick={this.buyAgricultureDome}>\n          'Buy an Agriculture Dome($100)'\n        </button>\n        <p>{this.state.message}</p>\n        <p>Credit Per Second: {this.state.rate}</p>\n        <p>Ore Mines in Operation: {this.state.numberOfMines}</p>\n        <p>\n          Gas Processing Facilities in Operation:{\" \"}\n          {this.state.numberOfGasProcessing}\n        </p>\n        <p>\n          Agricultural Domes in Operation: {this.state.numberOfAgricultureDome}\n        </p>\n        <p>Galactic Credit Accumulated: ${points}</p>\n        <p>Total Population: {this.state.population}</p>\n      </div>\n    );\n  }\n}\n\nexport default Clicker;\n"]},"metadata":{},"sourceType":"module"}