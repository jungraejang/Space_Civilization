{"ast":null,"code":"import _classCallCheck from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jungrae/Desktop/Assignments/react_events/react_assignment/src/Clicker.js\";\n\nvar React = require(\"react\");\n\nvar Clicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Clicker, _React$Component);\n\n  function Clicker() {\n    var _this;\n\n    _classCallCheck(this, Clicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Clicker).call(this));\n\n    _this.handleClicker = function () {\n      _this.setState({\n        points: _this.state.points + _this.state.rate\n      });\n    };\n\n    _this.buySpacePort = function () {\n      var cost = 10000;\n\n      if (_this.state.points >= cost + _this.state.numberOfSpacePort * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfSpacePort * 10),\n          rate: _this.state.rate + 3,\n          numberOfMines: _this.state.numberOfSpacePort += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyNanoFabricator = function () {\n      var cost = 800;\n\n      if (_this.state.points >= cost + _this.state.numberOfNanoFabricator * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfNanoFabricator * 10),\n          rate: _this.state.rate + 3,\n          numberOfMines: _this.state.numberOfNanoFabricator += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyAgricultureDome = function () {\n      var cost = 200;\n\n      if (_this.state.points >= cost + _this.state.numberOfAgricultureDome * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfAgricultureDome * 10),\n          rate: _this.state.rate + 3,\n          numberOfMines: _this.state.numberOfAgricultureDome += 1,\n          population: _this.state.population += 100\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyWaterPlant = function () {\n      var cost = 200;\n\n      if (_this.state.points >= cost + _this.state.numberOfWaterPlant * 10) {\n        _this.setState({\n          points: _this.state.points - (cost + _this.state.numberOfWaterPlant * 10),\n          rate: _this.state.rate + 3,\n          numberOfMines: _this.state.numberOfWaterPlant += 1,\n          population: _this.state.population += cost\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyGasProcessing = function () {\n      var cost = 200;\n\n      if (_this.state.points >= 100 + _this.state.numberOfGasProcessing * 10) {\n        _this.setState({\n          points: _this.state.points - (100 + _this.state.numberOfGasProcessing * 10),\n          rate: _this.state.rate + 3,\n          numberOfMines: _this.state.numberOfGasProcessing += 1\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.buyOreMine = function () {\n      var cost = 100;\n\n      if (_this.state.points >= 100 + _this.state.numberOfMines * 10) {\n        _this.setState({\n          points: _this.state.points - (100 + _this.state.numberOfMines * 10),\n          rate: _this.state.rate + 3,\n          numberOfMines: _this.state.numberOfMines += 1\n        });\n      } else {\n        _this.setState({\n          message: \"Not enough Credit. Need \" + \"$\" + (cost - _this.state.points)\n        });\n      }\n    };\n\n    _this.autoAccumulate = function () {\n      setInterval(function () {\n        _this.setState({\n          rate: _this.state.rate,\n          points: _this.state.points + _this.state.rate,\n          populationGrowth: Math.floor(_this.state.population * 0.01),\n          population: _this.state.population + _this.state.populationGrowth\n        });\n      }, 1000);\n    };\n\n    _this.state = {\n      points: 70,\n      population: 100,\n      populationGrowth: 0,\n      rate: 1,\n      message: \"\",\n      numberOfMines: 0,\n      numberOfGasProcessing: 0,\n      numberOfAgricultureDome: 0,\n      numberOfWaterPlant: 0,\n      numberOfNanoFabricator: 0,\n      numberOfSpacePort: 0\n    };\n    return _this;\n  }\n\n  _createClass(Clicker, [{\n    key: \"render\",\n    // populationIncrease = () => {\n    //   setInterval(() => {\n    //     this.setState({\n    //       populationGrowth: Math.floor(this.state.population * 0.01)\n    //     });\n    //   }, 1000);\n    // };\n    value: function render() {\n      var points = this.state.points;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"JRJ's Space CivilizationÂ®: Beyond Stars\"), React.createElement(\"button\", {\n        onClick: this.autoAccumulate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"START\"), React.createElement(\"button\", {\n        onClick: this.handleClicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Click Here\"), React.createElement(\"button\", {\n        onClick: this.buyOreMine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"'Buy an Ore Mine($100)'\"), React.createElement(\"button\", {\n        onClick: this.buyGasProcessing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"'Buy a Gas Processing Facility($100)'\"), React.createElement(\"button\", {\n        onClick: this.buyAgricultureDome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"'Buy an Agriculture Dome($200)'\"), React.createElement(\"button\", {\n        onClick: this.buyWaterPlant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"'Buy a Water Processing Plant'\"), React.createElement(\"button\", {\n        onClick: this.buyNanoFabricator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"'Buy a Nano Fabricator'\"), React.createElement(\"button\", {\n        onClick: this.buySpacePort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"'Construct a Space Port'\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Credit Per Second \\uD83D\\uDCB5: \", this.state.rate), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Population Growth Per Second \\uD83E\\uDD31: \", this.state.populationGrowth), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Ore Mines in Operation \\uD83D\\uDDFB: \", this.state.numberOfMines), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Gas Processing Facilities in Operation \\uD83C\\uDF0B:\", \" \", this.state.numberOfGasProcessing), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Agricultural Domes in Operation \\uD83E\\uDD6C: \", this.state.numberOfAgricultureDome), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Water Processing Plants in Operation \\uD83D\\uDCA7: \", this.state.numberOfWaterPlant), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Nano Fabricators in Operation \\u2699\\uFE0F: \", this.state.numberOfNanoFabricator), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Space Ports in Operation \\uD83D\\uDCE1: \", this.state.numberOfSpacePort), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Galactic Credit Accumulated \\uD83D\\uDCB0: $\", points), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Total Population \\uD83D\\uDC68\\u200D\\uD83D\\uDE80: \", this.state.population));\n    }\n  }]);\n\n  return Clicker;\n}(React.Component);\n\nexport default Clicker;","map":{"version":3,"sources":["/Users/jungrae/Desktop/Assignments/react_events/react_assignment/src/Clicker.js"],"names":["React","require","Clicker","handleClicker","setState","points","state","rate","buySpacePort","cost","numberOfSpacePort","numberOfMines","population","message","buyNanoFabricator","numberOfNanoFabricator","buyAgricultureDome","numberOfAgricultureDome","buyWaterPlant","numberOfWaterPlant","buyGasProcessing","numberOfGasProcessing","buyOreMine","autoAccumulate","setInterval","populationGrowth","Math","floor","Component"],"mappings":"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","sourcesContent":["const React = require(\"react\");\n\nclass Clicker extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      points: 70,\n      population: 100,\n      populationGrowth: 0,\n      rate: 1,\n      message: \"\",\n      numberOfMines: 0,\n      numberOfGasProcessing: 0,\n      numberOfAgricultureDome: 0,\n      numberOfWaterPlant: 0,\n      numberOfNanoFabricator: 0,\n      numberOfSpacePort: 0\n    };\n  }\n\n  handleClicker = () => {\n    this.setState({\n      points: this.state.points + this.state.rate\n    });\n  };\n\n  buySpacePort = () => {\n    let cost = 10000\n    if (this.state.points >= cost + this.state.numberOfSpacePort * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfSpacePort * 10),\n        rate: this.state.rate + 3,\n        numberOfMines: (this.state.numberOfSpacePort += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyNanoFabricator = () => {\n    let cost = 800\n    if (this.state.points >= cost + this.state.numberOfNanoFabricator * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfNanoFabricator * 10),\n        rate: this.state.rate + 3,\n        numberOfMines: (this.state.numberOfNanoFabricator += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyAgricultureDome = () => {\n    let cost = 200\n    if (this.state.points >= cost + this.state.numberOfAgricultureDome * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfAgricultureDome * 10),\n        rate: this.state.rate + 3,\n        numberOfMines: (this.state.numberOfAgricultureDome += 1),\n        population: (this.state.population += 100)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyWaterPlant = () => {\n    let cost = 200\n    if (this.state.points >= cost + this.state.numberOfWaterPlant * 10) {\n      this.setState({\n        points:\n          this.state.points - (cost + this.state.numberOfWaterPlant * 10),\n        rate: this.state.rate + 3,\n        numberOfMines: (this.state.numberOfWaterPlant += 1),\n        population: (this.state.population += cost)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyGasProcessing = () => {\n    let cost = 200\n    if (this.state.points >= 100 + this.state.numberOfGasProcessing * 10) {\n      this.setState({\n        points:\n          this.state.points - (100 + this.state.numberOfGasProcessing * 10),\n        rate: this.state.rate + 3,\n        numberOfMines: (this.state.numberOfGasProcessing += 1)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  buyOreMine = () => {\n    let cost = 100\n    if (this.state.points >= 100 + this.state.numberOfMines * 10) {\n      this.setState({\n        points: this.state.points - (100 + this.state.numberOfMines * 10),\n        rate: this.state.rate + 3,\n        numberOfMines: (this.state.numberOfMines += 1)\n      });\n    } else {\n      this.setState({\n        message: \"Not enough Credit. Need \" + \"$\" + (cost - this.state.points)\n      });\n    }\n  };\n\n  // setInitRate = () => {\n  //   this.setState({\n  //     rate: 1\n  //   });\n  // };\n\n  autoAccumulate = () => {\n    setInterval(() => {\n      this.setState({\n        rate: this.state.rate,\n        points: this.state.points + this.state.rate,\n        populationGrowth: Math.floor(this.state.population * 0.01),\n        population: this.state.population + this.state.populationGrowth\n      });\n    }, 1000);\n  };\n\n  // populationIncrease = () => {\n  //   setInterval(() => {\n  //     this.setState({\n  //       populationGrowth: Math.floor(this.state.population * 0.01)\n  //     });\n  //   }, 1000);\n  // };\n\n  render() {\n    const { points } = this.state;\n    return (\n      <div>\n      <h1>{\"JRJ's Space CivilizationÂ®: Beyond Stars\"}</h1>\n        <button onClick={this.autoAccumulate}>\n          START\n        </button>\n        <button onClick={this.handleClicker}>Click Here</button>\n        <button onClick={this.buyOreMine}>'Buy an Ore Mine($100)'</button>\n        <button onClick={this.buyGasProcessing}>\n          'Buy a Gas Processing Facility($100)'\n        </button>\n        <button onClick={this.buyAgricultureDome}>\n          'Buy an Agriculture Dome($200)'\n        </button>\n        <button onClick={this.buyWaterPlant}>'Buy a Water Processing Plant'</button>\n        <button onClick={this.buyNanoFabricator}>'Buy a Nano Fabricator'</button>\n        <button onClick={this.buySpacePort}>'Construct a Space Port'</button>\n\n        <p>{this.state.message}</p>\n        <p>Credit Per Second ðµ: {this.state.rate}</p>\n        <p>Population Growth Per Second ð¤±: {this.state.populationGrowth}</p>\n        <p>Ore Mines in Operation ð»: {this.state.numberOfMines}</p>\n        <p>\n          Gas Processing Facilities in Operation ð:{\" \"}\n          {this.state.numberOfGasProcessing}\n        </p>\n        <p>\n          Agricultural Domes in Operation ð¥¬: {this.state.numberOfAgricultureDome}\n        </p>\n        <p>Water Processing Plants in Operation ð§: {this.state.numberOfWaterPlant}</p>\n        <p>Nano Fabricators in Operation âï¸: {this.state.numberOfNanoFabricator}</p>\n        <p>Space Ports in Operation ð¡: {this.state.numberOfSpacePort}</p>\n        <p>Galactic Credit Accumulated ð°: ${points}</p>\n        <p>Total Population ð¨âð: {this.state.population}</p>\n      </div>\n    );\n  }\n}\n\nexport default Clicker;\n"]},"metadata":{},"sourceType":"module"}